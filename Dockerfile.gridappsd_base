FROM gridappsd/gridappsd_base:builder

WORKDIR /gridappsd

ENV GRIDAPPSD=/gridappsd
#ENV FNCS_INSTALL=${GRIDAPPSD}
ENV GLD_INSTALL=${GRIDAPPSD}
ENV CZMQ_VERSION 4.2.0
ENV ZMQ_VERSION 4.3.1
ENV TEMP_DIR=/tmp/source

ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${GRIDAPPSD}/lib

#ENV FNCS_LOG_FILE=yes
#ENV FNCS_LOG_STDOUT=yes
#ENV FNCS_LOG_TRACE=yes
#ENV FNCS_LOG_LEVEL=DEBUG1

ENV PYHELICS_INSTALL=/gridappsd

# ----------------------------------------------------
# INSTALL ZMQ and BINDINGS for c++
# ----------------------------------------------------

RUN mkdir ${TEMP_DIR} \
    && cd ${TEMP_DIR} \
    && wget http://github.com/zeromq/libzmq/releases/download/v${ZMQ_VERSION}/zeromq-${ZMQ_VERSION}.tar.gz \
    && tar -xzf zeromq-${ZMQ_VERSION}.tar.gz \
    && cd ${TEMP_DIR}/zeromq-${ZMQ_VERSION} \
    && ./configure --prefix=${GRIDAPPSD} \
    && make \
    && make install \
    && cd /tmp \
    && /bin/rm -r ${TEMP_DIR}/zeromq-${ZMQ_VERSION} \
    && /bin/rm ${TEMP_DIR}/zeromq-${ZMQ_VERSION}.tar.gz

#ENV CFLAGS=-I${GRIDAPPSD}/include
#ENV LDFLAGS=-L${GRIDAPPSD}/lib
#ENV PKG_CONFIG_PATH=${GRIDAPPSD}/lib/pkgconfig

#RUN cd ${TEMP_DIR} \
#    && wget https://github.com/zeromq/czmq/releases/download/v${CZMQ_VERSION}/czmq-${CZMQ_VERSION}.tar.gz \
#    && tar -xzf czmq-${CZMQ_VERSION}.tar.gz \
#    && cd ${TEMP_DIR}/czmq-${CZMQ_VERSION} \
#    && ./configure --prefix=${GRIDAPPSD} \
#    && make \
#    && make install \
#    && cd /tmp \
#    && /bin/rm -r ${TEMP_DIR}/czmq-${CZMQ_VERSION} \
#    && /bin/rm ${TEMP_DIR}/czmq-${CZMQ_VERSION}.tar.gz

#ENV CLFAGS=
#ENV LDFLAGS=
#ENV PKG_CONFIG_PATH=

# ----------------------------------------------------
# INSTALL FNCS
# ----------------------------------------------------

#RUN cd $TEMP_DIR \
#    && git clone -b develop --single-branch https://github.com/GRIDAPPSD/fncs.git \
#    && cd fncs \
#    && ./configure --prefix=${GRIDAPPSD} --with-zmq=${GRIDAPPSD} \
#    && make \
#   && make install \
#   && cd python \
#   && python setup.py sdist \
#    && pip install dist/fncs-2.0.1.tar.gz \
#   && pip3 install dist/fncs-2.0.1.tar.gz \
#   && cd /tmp \
#   && /bin/rm -r ${TEMP_DIR}/fncs

# ----------------------------------------------------
# INSTALL Helics
# ----------------------------------------------------

RUN cd $TEMP_DIR \
    && git clone -b v3.2.0 --single-branch https://github.com/GMLC-TDC/HELICS \
    && cd HELICS \
    && mkdir build \
    && cd build \
    && cmake -DCMAKE_INSTALL_PREFIX=$GLD_INSTALL ../ \
    && make \
    && make install \
    && cd /tmp \
    && /bin/rm -r ${TEMP_DIR}/HELICS \
    && pip install helics==3.2.0 \
	&& pip install https://github.com/GMLC-TDC/helics-cli/archive/refs/tags/v0.6.1.tar.gz

# ----------------------------------------------------
# INSTALL Gridlab-D
# ----------------------------------------------------

RUN cd $TEMP_DIR \
    && git clone https://github.com/gridlab-d/gridlab-d.git -b feature/1279 --single-branch \
    && cd ${TEMP_DIR}/gridlab-d/third_party \
    && tar -xzf xerces-c-3.2.0.tar.gz \
    && cd ${TEMP_DIR}/gridlab-d/third_party/xerces-c-3.2.0 \
    && ./configure \
    && make \
    && make install \
    && cd ${TEMP_DIR}/gridlab-d \
    && autoreconf -if \
    && ./configure --with-helics=$GLD_INSTALL --prefix=$GLD_INSTALL --enable-silent-rules 'CFLAGS=-g -O2 -w' 'CXXFLAGS=-g -O2 -w -std=c++14' 'LDFLAGS=-g -O2 -w' \
    && make \
    && make install \
    && cd /tmp \
    && /bin/rm -r ${TEMP_DIR}/gridlab-d

# ----------------------------------------------------
# INSTALL Java
# ----------------------------------------------------

RUN apt update \
     && mkdir -p /usr/share/man/man1 \
     && apt install -y openjdk-8-jdk-headless \
     && apt-get clean

# ----------------------------------------------------
# INSTALL Activemq c++ extensions
# ----------------------------------------------------
RUN cd ${TEMP_DIR} \
    && wget http://archive.apache.org/dist/activemq/activemq-cpp/3.9.4/activemq-cpp-library-3.9.4-src.tar.gz \
    && tar -xzf activemq-cpp-library-3.9.4-src.tar.gz \
    && cd activemq-cpp-library-3.9.4 \
    && ./configure --prefix=${GRIDAPPSD} \
    && make \
    && make install \
    && cd /tmp \
    && /bin/rm -r ${TEMP_DIR}/activemq-cpp-library-3.9.4 \
    && /bin/rm -r ${TEMP_DIR}/activemq-cpp-library-3.9.4-src.tar.gz 

# ----------------------------------------------------
# INSTALL Python requirements 
# ----------------------------------------------------
COPY ./requirements_base.txt /gridappsd/requirements_base.txt
RUN pip install -r /gridappsd/requirements_base.txt && \
  rm -rf /root/.cache/pip/wheels

# ----------------------------------------------------
# INSTALL State Estimator
# ----------------------------------------------------
RUN cd ${TEMP_DIR} \
  && git clone https://github.com/GRIDAPPSD/gridappsd-state-estimator \
  && cd gridappsd-state-estimator \
  && git clone https://github.com/GRIDAPPSD/SuiteSparse \
  && git clone https://github.com/GRIDAPPSD/json \
  && LD_LIBRARY_PATH=${TEMP_DIR}/gridappsd-state-estimator/SuiteSparse/lib/ make -C SuiteSparse LAPACK=-llapack BLAS=-lblas \
  && make -C state-estimator \
  && mkdir -p /gridappsd/services/gridappsd-state-estimator \
  && rm -rf .git SuiteSparse/.git json.git \
  && cp -r * /gridappsd/services/gridappsd-state-estimator \
  && cp /gridappsd/services/gridappsd-state-estimator/state-estimator.config /gridappsd/services/ \
  && cd /tmp \
  && /bin/rm -r ${TEMP_DIR}/gridappsd-state-estimator

# ----------------------------------------------------
# INSTALL Ochre
# ----------------------------------------------------
#RUN cd /gridappsd/services/ \
#    && git clone https://github.com/gridappsd/gridappsd-ochre \
#    && cd /gridappsd/services/gridappsd-ochre \
#    && pip install -r requirements.txt \
#    && rm -rf /root/.cache/pip/wheels 
#
#ENV PYTHONPATH=${PYTHONPATH}:/gridappsd/services/gridappsd-ochre
#ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib64
#
# ----------------------------------------------------
# Set the JAVA_HOME variable 
# ----------------------------------------------------
ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64
